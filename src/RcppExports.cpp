// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// extractEIC
List extractEIC(List specExp, NumericMatrix mzRange, NumericVector mz);
RcppExport SEXP _DecoMetDIA_extractEIC(SEXP specExpSEXP, SEXP mzRangeSEXP, SEXP mzSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type specExp(specExpSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mzRange(mzRangeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mz(mzSEXP);
    rcpp_result_gen = Rcpp::wrap(extractEIC(specExp, mzRange, mz));
    return rcpp_result_gen;
END_RCPP
}
// findIsotope
NumericVector findIsotope(NumericMatrix spec, int numIsotope, double ppm, NumericVector prop);
RcppExport SEXP _DecoMetDIA_findIsotope(SEXP specSEXP, SEXP numIsotopeSEXP, SEXP ppmSEXP, SEXP propSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type spec(specSEXP);
    Rcpp::traits::input_parameter< int >::type numIsotope(numIsotopeSEXP);
    Rcpp::traits::input_parameter< double >::type ppm(ppmSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type prop(propSEXP);
    rcpp_result_gen = Rcpp::wrap(findIsotope(spec, numIsotope, ppm, prop));
    return rcpp_result_gen;
END_RCPP
}
// funOptim
double funOptim(NumericVector x, NumericVector M, NumericMatrix S);
RcppExport SEXP _DecoMetDIA_funOptim(SEXP xSEXP, SEXP MSEXP, SEXP SSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type M(MSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type S(SSEXP);
    rcpp_result_gen = Rcpp::wrap(funOptim(x, M, S));
    return rcpp_result_gen;
END_RCPP
}
// mergeEIC
NumericMatrix mergeEIC(NumericMatrix x, NumericMatrix y);
RcppExport SEXP _DecoMetDIA_mergeEIC(SEXP xSEXP, SEXP ySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    rcpp_result_gen = Rcpp::wrap(mergeEIC(x, y));
    return rcpp_result_gen;
END_RCPP
}
// searchSpectra
List searchSpectra(List specExp, NumericMatrix mzRange, NumericVector mz, bool isMaxInt);
RcppExport SEXP _DecoMetDIA_searchSpectra(SEXP specExpSEXP, SEXP mzRangeSEXP, SEXP mzSEXP, SEXP isMaxIntSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type specExp(specExpSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type mzRange(mzRangeSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mz(mzSEXP);
    Rcpp::traits::input_parameter< bool >::type isMaxInt(isMaxIntSEXP);
    rcpp_result_gen = Rcpp::wrap(searchSpectra(specExp, mzRange, mz, isMaxInt));
    return rcpp_result_gen;
END_RCPP
}
// checkContinuousPtsAboveThr
bool checkContinuousPtsAboveThr(NumericVector v, int iStart, int num, double thr, int nSkipMax);
RcppExport SEXP _DecoMetDIA_checkContinuousPtsAboveThr(SEXP vSEXP, SEXP iStartSEXP, SEXP numSEXP, SEXP thrSEXP, SEXP nSkipMaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< int >::type iStart(iStartSEXP);
    Rcpp::traits::input_parameter< int >::type num(numSEXP);
    Rcpp::traits::input_parameter< double >::type thr(thrSEXP);
    Rcpp::traits::input_parameter< int >::type nSkipMax(nSkipMaxSEXP);
    rcpp_result_gen = Rcpp::wrap(checkContinuousPtsAboveThr(v, iStart, num, thr, nSkipMax));
    return rcpp_result_gen;
END_RCPP
}
// getContinuousPtsAboveThrIdx
NumericVector getContinuousPtsAboveThrIdx(NumericVector v, int iStart, int num, double thr, int nSkipMax);
RcppExport SEXP _DecoMetDIA_getContinuousPtsAboveThrIdx(SEXP vSEXP, SEXP iStartSEXP, SEXP numSEXP, SEXP thrSEXP, SEXP nSkipMaxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type v(vSEXP);
    Rcpp::traits::input_parameter< int >::type iStart(iStartSEXP);
    Rcpp::traits::input_parameter< int >::type num(numSEXP);
    Rcpp::traits::input_parameter< double >::type thr(thrSEXP);
    Rcpp::traits::input_parameter< int >::type nSkipMax(nSkipMaxSEXP);
    rcpp_result_gen = Rcpp::wrap(getContinuousPtsAboveThrIdx(v, iStart, num, thr, nSkipMax));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DecoMetDIA_extractEIC", (DL_FUNC) &_DecoMetDIA_extractEIC, 3},
    {"_DecoMetDIA_findIsotope", (DL_FUNC) &_DecoMetDIA_findIsotope, 4},
    {"_DecoMetDIA_funOptim", (DL_FUNC) &_DecoMetDIA_funOptim, 3},
    {"_DecoMetDIA_mergeEIC", (DL_FUNC) &_DecoMetDIA_mergeEIC, 2},
    {"_DecoMetDIA_searchSpectra", (DL_FUNC) &_DecoMetDIA_searchSpectra, 4},
    {"_DecoMetDIA_checkContinuousPtsAboveThr", (DL_FUNC) &_DecoMetDIA_checkContinuousPtsAboveThr, 5},
    {"_DecoMetDIA_getContinuousPtsAboveThrIdx", (DL_FUNC) &_DecoMetDIA_getContinuousPtsAboveThrIdx, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_DecoMetDIA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
